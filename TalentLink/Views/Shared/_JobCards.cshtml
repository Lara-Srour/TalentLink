@model IEnumerable<TalentLink.Models.Job>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var job in Model)
    { var currentUser = await UserManager.GetUserAsync(User);

        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@job.JobTitle</h5>
                    <p class="card-text flex-grow-1">
                        @job.Description.Substring(0, Math.Min(job.Description.Length, 100))...
                    </p>
                    <p><strong>Budget:</strong> $@job.Salary</p>
                    <p><small>Posted on @job.DatePosted.ToShortDateString()</small></p>
                   <div class="d-flex justify-content-between mt-auto">
                     
                        @if (await UserManager.IsInRoleAsync(currentUser, "Client"))
                        {
                            <a href="@Url.Action("JobDetails", "Clients", new { id = job.Id })"
                               class="btn btn-primary mt-auto">View Details</a>
                            <a href="@Url.Action("JobApplicants", "Clients", new { JobId = job.Id })"
                               class="btn btn-primary mt-auto">View Applicants</a>
                        }
                        else if (await UserManager.IsInRoleAsync(currentUser, "Freelancer"))
                        {
                            <a href="@Url.Action("JobDetails", "Freelancers", new { id = job.Id })"
                               class="btn btn-primary mt-auto">View Details</a>

                        }

                   </div>
                </div>
            </div>
        </div>
    }
</div>

